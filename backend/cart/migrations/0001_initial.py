# Generated by Django 2.1.7 on 2019-05-15 07:16

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('reference', '0002_auto_20190515_0646'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CartRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Code')),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='Priority')),
                ('start_date', models.DateTimeField(auto_now=True, verbose_name='Start Date')),
                ('expiration_date', models.DateTimeField(verbose_name='Expiration Date')),
                ('status', models.BooleanField(default=0, verbose_name='Status')),
                ('highlight', models.BooleanField(default=0, verbose_name='Highlight')),
                ('minimum_amount', models.IntegerField(default=0, verbose_name='Minimum Amount')),
                ('free_delivery', models.BooleanField(default=0, verbose_name='Free Delivery')),
                ('total_available', models.IntegerField(blank=True, null=True, verbose_name='Total Available')),
                ('total_available_each_user', models.IntegerField(blank=True, null=True, verbose_name='Total Available Each User')),
                ('promo_label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Promo Label')),
                ('promo_text', models.TextField(blank=True, null=True, verbose_name='Promo Text')),
                ('multiply_gift', models.IntegerField(default=1, verbose_name='Multiply Gift')),
                ('min_nr_products', models.IntegerField(default=0, verbose_name='Min Nr Products')),
                ('discount_type', models.CharField(choices=[(0, 'Percent - order'), (1, 'Percent - selected products'), (2, 'Percent - cheapest product'), (3, 'Percent - most expensive product'), (4, 'Amount - order')], default=0, max_length=1, verbose_name='Discount Type')),
                ('reduction_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=13, verbose_name='Reduction Amount')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('gift_product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product.Product')),
                ('minimum_ammount_currency_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='minimum_ammount_currency_id', to='reference.Currency')),
                ('reduction_currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reduction_currency', to='reference.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='CartRulesCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cart.CartRule')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='reference.Category')),
            ],
        ),
        migrations.CreateModel(
            name='CartRulesCombination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_rule_id1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='cart_rule_id1', to='cart.CartRule')),
                ('cart_rule_id2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='cart_rule_id2', to='cart.CartRule')),
            ],
        ),
        migrations.CreateModel(
            name='CartRulesCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cart.CartRule')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartRulesProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cart.CartRule')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='CartRulesProductsGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cart.CartRule')),
                ('product_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product.ProductGroup')),
            ],
        ),
    ]
